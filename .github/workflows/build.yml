pname: Dolphin-AppImage

on: 
  push:
  workflow_dispatch:
  #schedule:
  #  - cron: "15 0 * * 3" 

jobs:
  dolphin-appimage:
    name: dolphin bundled as appimage
    runs-on: ubuntu-18.04

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # Runs the Dolphin action
      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")
      - name: cache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: build-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            build-ccache-
      #- name: install Dolphin
      #  run: |
      #        mkdir -p "$HOME/.ccache"
      #        docker pull quriouspixel/dolphin:18.04
      #        docker run -u root --env-file travis/common/travis-ci.env -v $(pwd):/dolphin -v "$HOME/.ccache":/root/.ccache quriouspixel/dolphin:18.04 /bin/bash /dolphin/travis/appimage/docker.sh
      #- name: Run Dolphin-AppImage
      #  run:  ls -al
      - name: Download dolphin-emu-nogui
        run:  ls -al
      - name: Test Dolphin Headless
        run: |
            mkdir bin 
            curl -sL "https://github.com/qurious-pixel/dolphin/releases/download/headless/dolphin-emu-nogui" -o bin/dolphin-emu-nogui
            chmod +x bin/dolphin-emu-nogui
            sudo apt update
            sudo apt install libgl1-mesa-dev libglu1-mesa-dev xvfb libopengl0 xserver-xorg-video-fbdev mesa-utils alsa-utils libpulse-dev libevdev-dev libsfml-dev libbluetooth-dev libhidapi-dev libavformat-dev libavcodec-dev libswscale-dev libavutil-dev libmbedtls-dev libmbedx509-0 libmbedcrypto1 libpugixml-dev
            echo "DISPLAY: $DISPLAY"
            export LIBGL_ALWAYS_SOFTWARE=1
            LIBGL_ALWAYS_SOFTWARE=1 && xvfb-run glxgears           
            #Xvfb :5 -screen 0 800x600x24 &
            #export DISPLAY=:5
            #glxgears 
            # ldd bin/dolphin-emu-nogui  # | grep "not found"
            #glxinfo | grep OpenGL
            mkdir ISO
            curl -sLO "https://github.com/emukidid/swiss-gc/releases/download/v0.5r1086/swiss_r1086.tar.xz" 
            tar -xvf swiss_r1086.tar.xz
            mv 'swiss_r1086/ISO/swiss_r1086(ntsc-u).iso' ISO
            ls -al ISO
            timeout 20s xvfb-run bin/dolphin-emu-nogui --platform=headless -e 'ISO/swiss_r1086(ntsc-u).iso' 
      #- name: Upload Dolphin
      #  run: |
      #      ls -al artifacts/
      #      wget -c https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz
      #      tar xfv ghr_v0.13.0_linux_amd64.tar.gz
      #      ghr_v0.13.0_linux_amd64/ghr -recreate -n 'Headless build' -b "GitHub https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" headless artifacts/
    
      #  env:
      #    DEFAULT_BRANCH: git-actions
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
