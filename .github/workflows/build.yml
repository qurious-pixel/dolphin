name: Dolphin-AppImage

on: 
  push:

jobs:
  dolphin-appimage:
    name: dolphin bundled as appimage
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # Runs the Dolphin action
      - name: Prepare ccache timestamp
        id: ccache_cache_timestamp
        shell: cmake -P {0}
        run: |
          string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
          message("::set-output name=timestamp::${current_date}")
      - name: cache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: build-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
          restore-keys: |
            build-ccache-
      - name: Install Packages
        continue-on-error: true
        id: packages
        run: |
          sudo add-apt-repository -y ppa:beineri/opt-qt-5.15.2-focal
          sudo apt-get install -y build-essential dialog dpkg fuse libbluetooth-dev liblz4-dev liblzma-dev libssl-dev libopus-dev libpng-dev libsystemd-dev \
          libzip-dev libzstd-dev zlib1g-dev libasound2-dev libpulse-dev pulseaudio p7zip p7zip-full libsfml-dev libminiupnpc-dev libmbedtls-dev libpugixml-dev \
          libbz2-dev liblzo2-dev qt515base libxi-dev libavcodec-dev libudev-dev libusb-1.0-0-dev libevdev-dev libc6-dev libhidapi-dev libavformat-dev libavdevice-dev \
          libfmt-dev libwayland-dev libxrandr-dev libglu1-mesa-dev libcurl4-openssl-dev x11-utils zenity wget curl git gettext ccache make cmake ninja-build \
      - name: Install Packages if failed
        id: packages2
        if: steps.packages.outcome=='failure'
        run: |
          sudo add-apt-repository -y ppa:beineri/opt-qt-5.15.2-focal
          sudo apt-get install -y build-essential dialog dpkg fuse libbluetooth-dev liblz4-dev liblzma-dev libssl-dev libopus-dev libpng-dev libsystemd-dev \
          libzip-dev libzstd-dev zlib1g-dev libasound2-dev libpulse-dev pulseaudio p7zip p7zip-full libsfml-dev libminiupnpc-dev libmbedtls-dev libpugixml-dev \
          libbz2-dev liblzo2-dev qt515base libxi-dev libavcodec-dev libudev-dev libusb-1.0-0-dev libevdev-dev libc6-dev libhidapi-dev libavformat-dev libavdevice-dev \
          libfmt-dev libwayland-dev libxrandr-dev libglu1-mesa-dev libcurl4-openssl-dev x11-utils zenity wget curl git gettext ccache make cmake ninja-build \
      - name: install Dolphin
        run: |
              mkdir -p "$HOME/.ccache"
      - name: Run Dolphin-AppImage
        run:  ls -al
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Dolphin_Emulator-x86_64.AppImage
          path: artifacts/
